# Workflow for checking the backward compatibility of UMF.
# Test the latest UMF shared library with binaries compiled using the older UMF 
# shared library.
name: Compatibility 

on:
  workflow_call:
    inputs:
      tag:
        description: Check backward compatibility with this tag
        type: string
        default: "v0.11.0-dev1"

permissions:
  contents: read

jobs:
  ubuntu:
    name: Ubuntu
    runs-on: 'ubuntu-22.04'

    steps:
    - name: Install apt packages
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake libnuma-dev libtbb-dev

    - name: Checkout "tag" UMF version
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: 0
        ref: refs/tags/${{inputs.tag}}
        path: ${{github.workspace}}/tag_version

    - name: Install libhwloc
      working-directory: ${{github.workspace}}/tag_version
      run: .github/scripts/install_hwloc.sh

    - name: Configure "tag" UMF build
      working-directory: ${{github.workspace}}/tag_version
      run: >
        cmake
        -B ${{github.workspace}}/tag_version/build
        -DCMAKE_BUILD_TYPE=Debug
        -DUMF_BUILD_SHARED_LIBRARY=ON
        -DCMAKE_C_COMPILER=gcc
        -DCMAKE_CXX_COMPILER=g++
        -DUMF_BUILD_TESTS=ON
        -DUMF_BUILD_EXAMPLES=ON
        -DUMF_BUILD_LEVEL_ZERO_PROVIDER=ON
        -DUMF_BUILD_CUDA_PROVIDER=ON
        -DUMF_FORMAT_CODE_STYLE=OFF
        -DUMF_DEVELOPER_MODE=ON
        -DUMF_BUILD_LIBUMF_POOL_JEMALLOC=ON
        -DUMF_BUILD_LIBUMF_POOL_DISJOINT=ON
        -DUMF_TESTS_FAIL_ON_SKIP=ON

    - name: Build "tag" UMF
      working-directory: ${{github.workspace}}/tag_version
      run: |
        cmake --build ${{github.workspace}}/tag_version/build -j $(nproc)

    - name: Run "tag" UMF tests
      working-directory: ${{github.workspace}}/tag_version/build
      run: |
        LD_LIBRARY_PATH=${{github.workspace}}/tag_version/build/lib/ ctest --output-on-failure

    - name: Checkout latest UMF version
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: 0
        path: ${{github.workspace}}/latest_version

    - name: Configure latest UMF build
      working-directory: ${{github.workspace}}/latest_version
      run: >
        cmake
        -B ${{github.workspace}}/latest_version/build
        -DCMAKE_BUILD_TYPE=Debug
        -DUMF_BUILD_SHARED_LIBRARY=ON
        -DCMAKE_C_COMPILER=gcc
        -DCMAKE_CXX_COMPILER=g++
        -DUMF_BUILD_TESTS=OFF
        -DUMF_BUILD_LEVEL_ZERO_PROVIDER=ON
        -DUMF_BUILD_CUDA_PROVIDER=ON
        -DUMF_FORMAT_CODE_STYLE=OFF
        -DUMF_DEVELOPER_MODE=ON
        -DUMF_BUILD_LIBUMF_POOL_JEMALLOC=ON

    - name: Build latest UMF
      working-directory: ${{github.workspace}}/latest_version
      run: |
        cmake --build ${{github.workspace}}/latest_version/build -j $(nproc)

    - name: Run "tag" UMF tests with latest UMF libs (warnings enabled)
      working-directory: ${{github.workspace}}/tag_version/build
      run: >
        UMF_LOG="level:warning;flush:debug;output:stderr;pid:no"
        LD_LIBRARY_PATH=${{github.workspace}}/latest_version/build/lib/
        ctest --verbose

  windows:
    name: Windows
    env:
      VCPKG_PATH: "${{github.workspace}}/vcpkg/packages/hwloc_x64-windows;${{github.workspace}}/vcpkg/packages/tbb_x64-windows;${{github.workspace}}/vcpkg/packages/jemalloc_x64-windows"
    runs-on: "windows-2022"

    steps:
    - name: Checkout "tag" UMF version
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: 0
        ref: refs/tags/${{inputs.tag}}
        path: ${{github.workspace}}/tag_version

    - name: Initialize vcpkg
      uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1 # v11.5
      with:
        vcpkgGitCommitId: 3dd44b931481d7a8e9ba412621fa810232b66289
        vcpkgDirectory: ${{github.workspace}}/vcpkg
        vcpkgJsonGlob: '**/vcpkg.json'

    # NOTE we use vcpkg setup from "tag" version
    - name: Install dependencies
      working-directory: ${{github.workspace}}/tag_version
      run: vcpkg install
      shell: pwsh # Specifies PowerShell as the shell for running the script.

    - name: Configure "tag" UMF build
      working-directory: ${{github.workspace}}/tag_version
      run: >
        cmake
        -B "${{github.workspace}}/tag_version/build"
        -DCMAKE_PREFIX_PATH="${{env.VCPKG_PATH}}"
        -DCMAKE_C_COMPILER=cl
        -DCMAKE_CXX_COMPILER=cl
        -DUMF_BUILD_SHARED_LIBRARY=ON
        -DUMF_BUILD_TESTS=ON
        -DUMF_BUILD_EXAMPLES=ON
        -DUMF_BUILD_LEVEL_ZERO_PROVIDER=ON
        -DUMF_BUILD_CUDA_PROVIDER=ON
        -DUMF_FORMAT_CODE_STYLE=OFF
        -DUMF_DEVELOPER_MODE=ON
        -DUMF_BUILD_LIBUMF_POOL_JEMALLOC=ON
        -DUMF_BUILD_LIBUMF_POOL_DISJOINT=ON
        -DUMF_TESTS_FAIL_ON_SKIP=ON

    - name: Build "tag" UMF
      run: cmake --build "${{github.workspace}}/tag_version/build" --config Debug -j $Env:NUMBER_OF_PROCESSORS

    - name: Run "tag" UMF tests
      working-directory: "${{github.workspace}}/tag_version/build"
      run: ctest -C Debug --output-on-failure --test-dir test

    - name: Checkout latest UMF version
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: 0
        path: ${{github.workspace}}/latest_version

    - name: Configure latest UMF build
      working-directory: ${{github.workspace}}/latest_version
      run: >
        cmake
        -B "${{github.workspace}}/latest_version/build"
        -DCMAKE_PREFIX_PATH="${{env.VCPKG_PATH}}"
        -DCMAKE_C_COMPILER=cl
        -DCMAKE_CXX_COMPILER=cl
        -DUMF_BUILD_SHARED_LIBRARY=ON
        -DUMF_BUILD_TESTS=OFF
        -DUMF_BUILD_LEVEL_ZERO_PROVIDER=ON
        -DUMF_BUILD_CUDA_PROVIDER=ON
        -DUMF_FORMAT_CODE_STYLE=OFF
        -DUMF_DEVELOPER_MODE=ON
        -DUMF_BUILD_LIBUMF_POOL_JEMALLOC=ON

    - name: Build latest UMF
      run: cmake --build "${{github.workspace}}/latest_version/build" --config Debug -j $Env:NUMBER_OF_PROCESSORS

    - name: Run "tag" UMF tests with latest UMF libs (warnings enabled)
      working-directory: ${{github.workspace}}/tag_version/build
      run: |
        $env:UMF_LOG="level:warning;flush:debug;output:stderr;pid:no" 
        cp ${{github.workspace}}/latest_version/build/bin/Debug/umf.dll ${{github.workspace}}/tag_version/build/bin/Debug/umf.dll
        ctest -C Debug --verbose

  gpu:
    name: GPU Ubuntu
    strategy:
      matrix:
        provider: ['LEVEL_ZERO', 'CUDA']
    runs-on: ["DSS-${{matrix.provider}}", "DSS-UBUNTU"]

    steps:
    - name: Checkout "tag" UMF version
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: 0
        ref: refs/tags/${{inputs.tag}}
        path: ${{github.workspace}}/tag_version

    - name: Configure "tag" UMF build
      working-directory: ${{github.workspace}}/tag_version
      run: >
        cmake
        -B ${{github.workspace}}/tag_version/build
        -DCMAKE_BUILD_TYPE=Debug
        -DUMF_BUILD_SHARED_LIBRARY=ON
        -DCMAKE_C_COMPILER=gcc
        -DCMAKE_CXX_COMPILER=g++
        -DUMF_BUILD_TESTS=ON
        -DUMF_BUILD_GPU_TESTS=ON
        -DUMF_BUILD_EXAMPLES=ON
        -DUMF_BUILD_GPU_EXAMPLES=ON
        -DUMF_BUILD_LEVEL_ZERO_PROVIDER=OFF
        -DUMF_BUILD_CUDA_PROVIDER=OFF
        -DUMF_BUILD_${{matrix.provider}}_PROVIDER=ON
        -DUMF_FORMAT_CODE_STYLE=OFF
        -DUMF_DEVELOPER_MODE=ON
        -DUMF_BUILD_LIBUMF_POOL_JEMALLOC=ON
        -DUMF_BUILD_LIBUMF_POOL_DISJOINT=ON
        -DUMF_TESTS_FAIL_ON_SKIP=ON

    - name: Build "tag" UMF
      working-directory: ${{github.workspace}}/tag_version
      run: |
        cmake --build ${{github.workspace}}/tag_version/build -j $(nproc)

    - name: Run "tag" UMF tests
      working-directory: ${{github.workspace}}/tag_version/build
      run: |
        LD_LIBRARY_PATH=${{github.workspace}}/tag_version/build/lib/ ctest --output-on-failure

    - name: Checkout latest UMF version
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: 0
        path: ${{github.workspace}}/latest_version

    - name: Configure latest UMF build
      working-directory: ${{github.workspace}}/latest_version
      run: >
        cmake
        -B ${{github.workspace}}/latest_version/build
        -DCMAKE_BUILD_TYPE=Debug
        -DUMF_BUILD_SHARED_LIBRARY=ON
        -DCMAKE_C_COMPILER=gcc
        -DCMAKE_CXX_COMPILER=g++
        -DUMF_BUILD_TESTS=OFF
        -DUMF_BUILD_LEVEL_ZERO_PROVIDER=ON
        -DUMF_BUILD_CUDA_PROVIDER=ON
        -DUMF_FORMAT_CODE_STYLE=OFF
        -DUMF_DEVELOPER_MODE=ON
        -DUMF_BUILD_LIBUMF_POOL_JEMALLOC=ON

    - name: Build latest UMF
      working-directory: ${{github.workspace}}/latest_version
      run: |
        cmake --build ${{github.workspace}}/latest_version/build -j $(nproc)

    # NOTE: Once not implemented features may now be implemented - exclude these tests
    - name: Run "tag" UMF tests with latest UMF libs (warnings enabled)
      working-directory: ${{github.workspace}}/tag_version/build
      run: >
        UMF_LOG="level:warning;flush:debug;output:stderr;pid:no"
        LD_LIBRARY_PATH=${{github.workspace}}/latest_version/build/lib/
        ctest --verbose -E "not_impl"
